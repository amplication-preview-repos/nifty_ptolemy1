datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Enterprise {
  contactDetails String?
  createdAt      DateTime @default(now())
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  updatedAt      DateTime @updatedAt
  users          User[]
}

model Chatbot {
  botName        String?
  companyName    String?
  contactDetails String?
  createdAt      DateTime        @default(now())
  dataEmbeddings DataEmbedding[]
  description    String?
  faqs           Faq[]
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt      DateTime        @updatedAt
  user           User?           @relation(fields: [userId], references: [id])
  userId         String?         @db.ObjectId
}

model DataEmbedding {
  chatbot   Chatbot? @relation(fields: [chatbotId], references: [id])
  chatbotId String?  @db.ObjectId
  createdAt DateTime @default(now())
  data      String?
  embedding Json?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
}

model Faq {
  answer    String?
  chatbot   Chatbot? @relation(fields: [chatbotId], references: [id])
  chatbotId String?  @db.ObjectId
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String?
  updatedAt DateTime @updatedAt
}

model User {
  chatbots     Chatbot[]
  createdAt    DateTime    @default(now())
  email        String?     @unique
  enterprise   Enterprise? @relation(fields: [enterpriseId], references: [id])
  enterpriseId String?     @db.ObjectId
  firstName    String?
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  lastName     String?
  password     String
  roles        Json
  updatedAt    DateTime    @updatedAt
  username     String      @unique
}
